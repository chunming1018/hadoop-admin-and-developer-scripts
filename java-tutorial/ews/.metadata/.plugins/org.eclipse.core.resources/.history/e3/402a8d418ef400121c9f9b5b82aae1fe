package com.cloudera.training;

import java.io.*;
import java.util.*;
import java.net.*;
import org.apache.hadoop.fs.*;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.util.*;

/**
 * 
 * http://blog.cloudera.com/blog/2012/03/authorization-and-authentication-in-hadoop/
 * 
 * 
 * @author training
 *
 */
public class FSTree {

	public static void main(String[] args) throws Exception {
		if ( args.length < 1 ) {
			
			System.out.println("Exit early, no args found.");
			
			System.exit(-2);
		}
		
		String path = args[0];
		// String serverNN = "hdfs://elephant:8020";
		// String serverNN = "hdfs://elephant:8020";
		
		try {

            Configuration conf = new Configuration();
            // conf.set("fs.defaultFS", serverNN);
        			
            System.out.println( conf.get("fs.defaultFS") );
            //System.out.println( conf.get("fs.default.name") );
            
			FileSystem fs = FileSystem.get( conf );
			FileStatus[] status = fs.listStatus(
					// new Path( serverNN + path )
					new Path( path )
		    );
			for (int i = 0; i < status.length; i++) {
				BufferedReader br = new BufferedReader(
						new InputStreamReader(
								fs.open(status[i].getPath())
					    )
				);
				String line;
				line = br.readLine();
				while (line != null) {
					System.out.println(line);
					line = br.readLine();
				}
			}
		} 
		catch (Exception e) {
			System.err.println( e.getMessage() );
			// System.out.println("File [" + serverNN + path + "] was not found in HDFS.");
			System.out.println("File [" + path + "] was not found in HDFS.");
	    }
	}
}